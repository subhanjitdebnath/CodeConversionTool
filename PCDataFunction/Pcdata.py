from datetime import datetime
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

class Pcdata():


# Contents:1.AnalysisTool 2.RemoveSpecialCharacter 3. Comment List

    def __init__(self):
        pass


##--------------------------START OF THE ANALYSIS MODULE---------------------------##

    def Analysis(self,Filepath,SavingPath):

        '''Analysis(self,Filepath,Savingpath)..
        This module will take the PC file and do analysis for the same.
        While using this function please pass only AAX files '''

        LocalVariableCount=0
        BlockList=[]
        specialset=set()
        TotalSequence=0
        Sequencedict={}
        stepcount=0
        Filename=''
        Sequencelist=''
        TotalPages=0

        ScantimeDetails=''

        pos=Filepath.find('\\')
        npos=pos+1
        Filename=Filename+Filepath[npos:]

        myfile=open(Filepath,'r')

        for _ in myfile:
            line1=_.strip()
            if not(len(line1)==0) and not('*' in line1):

                                         # Counting the number of Local variables and Identifying the Special Characters present

                if 'N=' in line1:
                        LocalVariableCount=LocalVariableCount+1
                        pos=line1.find('=')
                        pos1=pos+1
                        variable=line1[pos1:]
                        for _ in variable:
                            a=_.lower()
                            if not(a in 'qwertyuiopasdfghjklzxcvbnm1234567890_=, __'):
                                specialset.add(a)
                            else :
                                pass
                            
                                            #Counting Total Number of Sequences Present

                elif 'SEQ' in line1 and 'PC' in line1 and '(' in line1:
                    TotalSequence=TotalSequence+1
                    b=line1.split()
                    if not(b[0] in Sequencedict):
                        stepcount=0
                        Sequencedict[b[0]]=stepcount
                
                elif 'STEP' in line1 and 'PC' in line1 and '(' in line1:
                    stepcount=stepcount+1
                    Sequencedict[b[0]]=stepcount

                                            #Making Block List 
                elif 'PCD-PAGE' in line1:
                    TotalPages+=1

                elif 'CONTRM' in line1:
                    ScantimeDetails =ScantimeDetails+line1+'\n'

                elif line1[0]=='P' and line1[1]=='C' and line1[2] in '123456789' :
                    dumy = line1.split()
                    blockname = dumy[1]
                    if not(blockname in BlockList) and 'PC' in dumy[0]:
                        BlockList.append(blockname)
                    else :
                        pass

            else:
                pass
        myfile.close()

        for k,v in Sequencedict.items():
            Sequencelist= Sequencelist + 'SEQ :' + k + '   ----   Total Steps : '+ str(v) + '\n'

        content='''******* This is file generated by preconversion tool on  {}  From File : {} ***************

----------------------------------------------------------

    Special Characters Present =  {}  *If blank means no special character. _ is not special character.*

    Local vriable Qty = {}
    Total Pages = {}

----------------------------------------------------------

    SEQUENCE Details :
    Total No Of Sequnec = {}


{}
----------------------------------------------------------

    SCAN TIME DETAILS:
    {}

-----------------------------------------------------------

Total Block Type = {}

  Block Type                             '''.format(date_time,Filename,str(specialset),str(LocalVariableCount),TotalPages,TotalSequence,Sequencelist,ScantimeDetails,len(BlockList))

        for _ in BlockList:
            content=content+'\n'+'   '+ _
        newfilename = SavingPath + '/Analysis_'+Filename+'.txt'
        myfile = open(newfilename,'w')
        myfile.write(content)
        myfile.close()






##-----------------------END OF ANALYSIS MODULE--------------------------------##



##-----------------------START OF REMOVE SPECIAL CHARACTER MODULE--------------------------##

    def Remove_Spl_Char(self,FilePath,SpecialList):
        ''' Remove_Spl_Char(self,FilePath,SpecialList)
        Filepath =[...Str...]
        SpecialList=[..List..]
        This module removes the special characters from the AAXfiles.''' 

        Content=''''''

        temp=['','','']

        myfile=open(FilePath,'r')
        
        for _ in myfile:
            line1=_.strip()
            
            if 'N=' in line1:
                line2='@'
                line2=line2+line1
                word=line2.split('N=')[1]
                #print(line2+'---' +word) 
                temp[0]=word              
                for _ in SpecialList:
                    if temp[0][0]==_:
                        temp[1]=temp[0][0].replace(_,'')   
                        temp[2]=temp[0][1:]
                        temp[0]=temp[1]+temp[2]
                        temp[0]=temp[0].replace(_,'_')
                    else:
                        temp[0]=temp[0].replace(_,'_')
                
                newline=line1.replace(line1.split('N=')[1],temp[0])
                #print(newline+'--------'+temp[0]) 
                line1=newline

            else :
                pass
            Content=Content+line1+"\n"
        myfile.close()
        myfile=open(FilePath,'w')
        myfile.write(Content)

##----------------------------END OF REMOVE SPECIAL CHARACTER MODULE-----------------------##



##----------------------------STARTING OF COMMENT LIST---------------------------------##
    def SeqDetails(self,FilePath,SavingPath):

        '''SeqDetails(self,Filepath,Savingpath)..
        This module will take the PC file and extracts the sequence related details followed by PC number.
        While using this function please pass only AAX files '''


        PCstart=False
        Stepdetc=False
        Content=''''''
        Filename=''
        pos=FilePath.find('\\')
        npos=pos+1
        Filename=Filename+FilePath[npos:]

        myfile=open(FilePath,'r')

        for _ in myfile:
            line1=_.strip()

            if 'BEGIN' in line1:
                PCstart=True

            elif PCstart and not(len(line1)==0):

                if 'SEQ' in line1 or 'STEP' in line1 and 'PC' in line1 and '(' in line1:
                    Content = Content +'\n'
                    Stepdetc=True
                elif 'PC' in line1 and not('STEP' in line1) and not(':' in line1):
                    Stepdetc = False

                else:
                    pass
                if Stepdetc :
                    Content = Content + line1+'\n'
                
                else:
                    pass

                
                #elif ':COND' in line1:
                    #Content = Content + line1
                #elif ':RUN' in line1:
                    #Content = Content + line1
                #elif':STEPNAME' in line1:
                    #Content = Content + line1
                #elif ':ACTTXT' in line1:
                    #Content = Content + line1
               #elif ':CONDTXT' in line1:
                    #Content = Content + line1
            else:
                pass
        myfile.close()

        Content1='''******* This is file generated by preconversion tool on  {}  From File : {} ***************

{} 
        
        '''.format(Filename,date_time,Content)

        newfilename = SavingPath + '/SEQDETAILS'+Filename+'.txt'
        myfile = open(newfilename,'w')
        myfile.write(Content1)
        myfile.close()





##--------------------------END OF COMMENT MODULE----------------------##


##-------------------------STARTING OF SEQUENCE DETAILS MODULE-------------##

    def Comments(self,FilePath,SavingPath):
        '''Comments(self,Filepath,Savingpath)..
        This module will take the PC file and extracts the comments followed by PC number.
        While using this function please pass only AAX files '''

        PCstart=False
        GetPcName=False
        comment=['']
        CommentDict={}
        Content=''''''
        Filename=''
        pos=FilePath.find('\\')
        npos=pos+1
        Filename=Filename+FilePath[npos:]

        myfile=open(FilePath,'r')

        for _ in myfile:
            line1=_.strip()

            if 'BEGIN' in line1:
                PCstart=True

            elif PCstart and not(len(line1)==0):

                if '"' in line1:
                    comment[0]=line1
                    GetPcName=True

                elif 'PC'in line1 and GetPcName:
                    dummy=line1.split()
                    CommentDict[dummy[0]]=comment[0]
                    GetPcName=False
                else:
                    pass
            else:
                pass
        myfile.close()

        for k,v in CommentDict.items():
            Content = Content +'\n' + k + '----------------' + v
        Content1='''******* This is file generated by preconversion tool on  {}  From File : {} ***************

{} 
        
        '''.format(Filename,date_time,Content)

        newfilename = SavingPath + '/Comments'+Filename+'.txt'
        myfile = open(newfilename,'w')
        myfile.write(Content1)
        myfile.close()

## Search Function
    def SearchBlk(self, FilePath, SavingPath):
        '''SeqDetails(self,Filepath,Savingpath)..
        This module will take the PC file and extracts the sequence related details followed by PC number.
        While using this function please pass only AAX files '''

        PCstart = False
        Stepdetc = False
        Content = ''''''
        Filename = ''
        pos = FilePath.find('\\')
        npos = pos + 1
        Filename = Filename + FilePath[npos:]

        myfile = open(FilePath, 'r')

        for _ in myfile:
            line1 = _.strip()

            if 'BEGIN' in line1:
                PCstart = True

            elif PCstart and not (len(line1) == 0):

                if 'SEQ' in line1 and 'PC' in line1 and '(' in line1 and not('SEQ-' in line1):
                    Content = Content + '\n'
                    Stepdetc = True
                elif 'PC' in line1 and not ('STEP' in line1) and not (':' in line1):
                    Stepdetc = False

                else:
                    pass
                if Stepdetc:
                    Content = Content + line1 + '\n'

                else:
                    pass

                # elif ':COND' in line1:
                # Content = Content + line1
                # elif ':RUN' in line1:
                # Content = Content + line1
                # elif':STEPNAME' in line1:
                # Content = Content + line1
                # elif ':ACTTXT' in line1:
                # Content = Content + line1
            # elif ':CONDTXT' in line1:
            # Content = Content + line1
            else:
                pass
        myfile.close()

        Content1 = '''******* This is file generated by preconversion tool on  {}  From File : {} ***************
    
    {} 
    
            '''.format(Filename, date_time, Content)

        newfilename = SavingPath + '/SEQDETAILS' + Filename + '.txt'
        myfile = open(newfilename, 'w')
        myfile.write(Content1)
        myfile.close()


    def Search(self, FilePath, SavingPath):
        '''Search(self,Filepath,Savingpath)..
        This module will take the PC file and extracts the sequence related details followed by PC number.
        While using this function please pass only AAX files '''

        Step = False
        Stepdetc = False
        BlckFnd = False
        RunFnd = False
        Content = ''''''
        Filename = ''
        RunTag=''
        BlckDetails=['']
        i=0
        pos = FilePath.find('\\')
        npos = pos + 1
        Filename = Filename + FilePath[npos:]

        myfile = open(FilePath, 'r')

        for _ in myfile:
            line1 = _.strip()

            if 'STEP' in line1:
                Step = True

            elif Step and 'PCD-PAGE'in line1:
                Step = False
                RunFnd = False

            elif Step and not (len(line1) == 0):

                if 'AND' in line1:
                    BlckFnd = True
                    BlckDetails[0]=line1

                elif ':RUN' in line1 and '=' in line1:
                    RunTag=RunTag+line1.split('=')[1]
                    RunFnd = True

                elif BlckFnd and not(':' in line1):
                    BlckFnd = False
                    Content=Content + '\n'+BlckDetails[0]

                elif BlckFnd and not RunFnd:
                    Content = Content + '\n' + BlckDetails[0]
                    BlckFnd = False

                elif BlckFnd and not (len(line1) == 0) and RunFnd:
                    if ':' in line1:
                        if RunTag in line1 or ':RUN' in line1:
                            BlckFnd = False
                        else:
                            pass
                else:
                    pass

            else:
                pass
        myfile.close()

        Content1 = '''******* This is file generated by preconversion tool on  {}  From File : {} ***************
    
        {} 
    
                '''.format(Filename, date_time, Content)

        newfilename = SavingPath + '/BlckSearch' + Filename + '.txt'
        myfile = open(newfilename, 'w')
        myfile.write(Content1)
        myfile.close()